input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
    codec => json
  }
  
  udp {
    port => 5000
    codec => json
  }
  
  file {
    path => "/var/log/syslog"
    type => "syslog"
    start_position => "beginning"
  }
  
  file {
    path => "/var/log/auth.log"
    type => "auth"
    start_position => "beginning"
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    }
    
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
    
    mutate {
      add_field => { "log_type" => "system" }
    }
  }
  
  if [type] == "auth" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:auth_timestamp} %{SYSLOGHOST:auth_hostname} %{DATA:auth_program}(?:\[%{POSINT:auth_pid}\])?: %{GREEDYDATA:auth_message}" }
    }
    
    date {
      match => [ "auth_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
    
    # Phát hiện các sự kiện bảo mật
    if [auth_message] =~ /Failed password/ {
      mutate {
        add_field => { "security_event" => "failed_login" }
        add_field => { "severity" => "medium" }
      }
    }
    
    if [auth_message] =~ /Accepted password/ {
      mutate {
        add_field => { "security_event" => "successful_login" }
        add_field => { "severity" => "low" }
      }
    }
    
    if [auth_message] =~ /Invalid user/ {
      mutate {
        add_field => { "security_event" => "invalid_user" }
        add_field => { "severity" => "high" }
      }
    }
    
    if [auth_message] =~ /sudo/ {
      mutate {
        add_field => { "security_event" => "sudo_command" }
        add_field => { "severity" => "medium" }
      }
    }
    
    mutate {
      add_field => { "log_type" => "authentication" }
    }
  }
  
  if [type] == "docker" {
    json {
      source => "message"
    }
    
    mutate {
      add_field => { "log_type" => "container" }
    }
  }
  
  # GeoIP lookup cho IP addresses
  if [client_ip] {
    geoip {
      source => "client_ip"
      target => "geoip"
    }
  }
  
  # Thêm timestamp nếu chưa có
  if ![@timestamp] {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  # Thêm hostname
  mutate {
    add_field => { "hostname" => "%{host}" }
  }
  
  # Phân loại mức độ nghiêm trọng
  if ![severity] {
    mutate {
      add_field => { "severity" => "info" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "security-logs-%{+YYYY.MM.dd}"
  }
  
  # Gửi cảnh báo cho các sự kiện quan trọng
  if [severity] == "high" or [severity] == "critical" {
    http {
      url => "http://backend:5000/api/alerts/webhook"
      http_method => "post"
      format => "json"
      mapping => {
        "event_type" => "%{security_event}"
        "severity" => "%{severity}"
        "message" => "%{message}"
        "source_ip" => "%{client_ip}"
        "timestamp" => "%{@timestamp}"
      }
    }
  }
}
